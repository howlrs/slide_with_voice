name: 'Rust Release'

on:
  push:
    branches:
      - release

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      # - name: Run tests
      #   run: cargo test

  build:
    name: Build
    needs: test
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: release-linux
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: release-windows.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: release-macos
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: release-macos-aarch64

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifacts
        shell: bash
        run: |
          # 各プラットフォーム用にディレクトリを作成
          mkdir -p artifacts/${{ matrix.artifact_name }}
          
          # バイナリをディレクトリ内にコピー
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp target/${{ matrix.target }}/release/*.exe artifacts/${{ matrix.artifact_name }}/
          else
            cp target/${{ matrix.target }}/release/*[^\.d] artifacts/${{ matrix.artifact_name }}/
          fi
          
          # リソースディレクトリのコピー
          if [ -d "resource" ]; then
            mkdir -p artifacts/${{ matrix.artifact_name }}/resource
            cp -r resource/* artifacts/${{ matrix.artifact_name }}/resource/
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: artifacts/${{ matrix.artifact_name }}
          if-no-files-found: error

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
          generate_release_notes: true
          draft: false